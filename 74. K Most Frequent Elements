import java.util.* ;
import java.io.*; 

class Pair{
	int a;
	int b;
	Pair(int x, int y){
		a = x;
		b = y;
	}
}
public class Solution {

	public static int[] KMostFrequent(int n, int k, int[] arr) {
		// Write your code here.
		HashMap<Integer,Integer> map = new HashMap<>();
		PriorityQueue<Pair> queue = new PriorityQueue<Pair>((l,m)->m.b - l.b);
		for(int i=0;i<n;i++){
			if(!map.containsKey(arr[i])){map.put(arr[i],1);}
			else{map.put(arr[i], map.get(arr[i])+1);}
		}

		for (Map.Entry<Integer,Integer> entry : map.entrySet()){
			queue.add(new Pair(entry.getKey(), entry.getValue()));
		}

		int f = k;
		int[] ans = new int[k];
		int i=0;
		while(f>0){
			ans[i++] = queue.peek().a;
			queue.remove();
			f--;
		} 

		return ans;




	}

}
