import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the TreeNode class structure

    class TreeNode<T>
    {
       public:
        T data;
        TreeNode<T> left;
        TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    };

************************************************************/

public class Solution 
{
    static TreeNode<Integer> invert(TreeNode<Integer> root, TreeNode<Integer> leaf, TreeNode<Integer> parent){
        
        if(root==null){return null;}
        if(root.data==leaf.data || root.data.equals(leaf.data)){
            //System.out.println(root.data+" "+parent.data);
            root.left=parent;
            //System.out.println(root.data+" "+root.left.data);

            return root;
        }

        TreeNode<Integer> l = invert(root.left, leaf, root);
        TreeNode<Integer> r = invert(root.right, leaf, root);
        //System.out.println(root.data+" "+l +" "+r);
        if(l!=null){

            TreeNode<Integer> left = root.left;
            root.left = parent;
            return l;
        }
        else if(r!=null){
            TreeNode<Integer> left = root.left;
            root.left = parent;
            root.right = left;
            return r;
        }

        return null;


    }
    public static TreeNode<Integer> invertBinaryTree(TreeNode<Integer> root, TreeNode<Integer> leaf) {
        // Write your code here.
        TreeNode a = invert(root, leaf, null);
        //return leaf;
        //System.out.println(a.left.left.right.data);
        
        return a;
    }
}
