import java.util.* ;
import java.io.*; 
/*
    Definition of Node class for reference

    class TreeNode<T> 
    {
        public T data;
        public TreeNode<T> left;
        public TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    }

*/
public class Solution {

    static class BSTIterator {
        List<Integer> arr = new ArrayList<>();
        int ind = 0;

        void inOrder(TreeNode<Integer> root) {
            if (root == null)
                return;

            inOrder(root.left);
            arr.add(root.data);
            inOrder(root.right);
        }

        BSTIterator(TreeNode<Integer> root) {
            // Write your code here
            inOrder(root);
        }

        int next() {
            // Write your code here
            return arr.get(ind++);
        }

        boolean hasNext() {
            // Write your code here
            return ind < arr.size();
        }
    }
}

/*
    Your BSTIterator object will be instantiated and called as such:
    BSTIterator iterator = new BSTIterator(root);
    while(iterator.hasNext())
    {
       print(iterator.next()+" ");
    }
*/
