import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the TreeNode class structure

    class TreeNode<T>
    {
       public:
        T data;
        TreeNode<T> left;
        TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    };

************************************************************/

import java.util.ArrayList;

public class Solution {


    static TreeNode<Integer> binaryTree(ArrayList<Integer> inorder, ArrayList<Integer> preorder, int is, int ie, int ps, int pe){
        if(is>ie || ps>pe){
            return null;
        }
        if(is==ie || ps==pe){
            return new TreeNode<Integer>(inorder.get(is));
        }
        
        int ind = -1;
        for(int i=is;i<=ie;i++){
            if(preorder.get(ps).equals(inorder.get(i))){
                ind = i;
                break;
            }
        }

        TreeNode<Integer> root = new TreeNode<Integer>(inorder.get(ind));
        int l = ind - is;
        int r = ie- ind;
        TreeNode<Integer> left = binaryTree(inorder, preorder, is, ind-1, ps+1, ps+l);
        TreeNode<Integer> right = binaryTree(inorder, preorder, ind+1, ie, ps+l+1, pe);
        root.left = left;
        root.right = right;
        return root;

    }
    public static TreeNode<Integer> buildBinaryTree(ArrayList<Integer>  inorder, ArrayList<Integer>  preorder) 
    {
        //    Write your code here.
        return binaryTree(inorder, preorder, 0, inorder.size()-1, 0, preorder.size()-1);
    }
}
